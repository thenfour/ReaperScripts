desc: MIDI Sanitizer (tenfour)
//tags: MIDI processing routing finale

// 1. CC filter (whitelist)
// 2. all events to channel 0
// 3. transpose +-36

// slider1:1<0,127,1{0 Bank Sel M,1 Mod Wheel M,2 Breath M,3,4 Foot P M,5 Porta M,6 Data Entry M,7 Vol M,8 Balance M,9,10 Pan M,11 Expression M,12 Ctrl 1 M,13 Ctrl 2 M,14,15,16 GP Slider 1,17 GP Slider 2,18 GP Slider 3,19 GP Slider 4,20,21,22,23,24,25,26,27,28,29,30,31,32 Bank Sel L,33 Mod Wheel L,34 Breath L,35,36 Foot P L,37 Porta L,38 Data Entry L,39 Vol L,40 Balance L,41,42 Pan L,43 Expression L,44 Ctrl 1 L,45 Ctrl 2 L,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64 Hold P sw,65 Porta sw,66 Sustenuto sw,67 Soft P sw,68 Legato P sw,69 Hold 2 P sw,70 S.Variation,71 S.Timbre,72 S.Release,73 S.Attack,74 S.Brightness,75 S.Ctrl 6,76 S.Ctrl 7,77 S.Ctrl 8,78 S.Ctrl 9,79 S.Ctrl 10,80 GP B.1 sw,81 GP B.2 sw,82 GP B.3 sw,83 GP B.4 sw,84,85,86,87,88,89,90,91 Effects Lv,92 Trem Lv,93 Chorus Lv,94 Celeste Lv,95 Phaser Lv,96 Data B. Inc,97 Data B. Dec,98 NRP L,99 NRP M,100 RP L,101 RP M,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127}>Controller Source
// slider2:1<0,127,1{0 Bank Sel M,1 Mod Wheel M,2 Breath M,3,4 Foot P M,5 Porta M,6 Data Entry M,7 Vol M,8 Balance M,9,10 Pan M,11 Expression M,12 Ctrl 1 M,13 Ctrl 2 M,14,15,16 GP Slider 1,17 GP Slider 2,18 GP Slider 3,19 GP Slider 4,20,21,22,23,24,25,26,27,28,29,30,31,32 Bank Sel L,33 Mod Wheel L,34 Breath L,35,36 Foot P L,37 Porta L,38 Data Entry L,39 Vol L,40 Balance L,41,42 Pan L,43 Expression L,44 Ctrl 1 L,45 Ctrl 2 L,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64 Hold P sw,65 Porta sw,66 Sustenuto sw,67 Soft P sw,68 Legato P sw,69 Hold 2 P sw,70 S.Variation,71 S.Timbre,72 S.Release,73 S.Attack,74 S.Brightness,75 S.Ctrl 6,76 S.Ctrl 7,77 S.Ctrl 8,78 S.Ctrl 9,79 S.Ctrl 10,80 GP B.1 sw,81 GP B.2 sw,82 GP B.3 sw,83 GP B.4 sw,84,85,86,87,88,89,90,91 Effects Lv,92 Trem Lv,93 Chorus Lv,94 Celeste Lv,95 Phaser Lv,96 Data B. Inc,97 Data B. Dec,98 NRP L,99 NRP M,100 RP L,101 RP M,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127}>Controller Target
// slider3:0<0,127,1>Clamp Low Value
// slider4:127<0,127,1>Clamp High Value
// slider5:0<0,1,1{No, Yes}>Pass Through CC Source

slider1:1<0,1,1{No, Yes}>Filter messages
slider2:1<0,1,1{No, Yes}>All events to channel 1
slider3:0<-24,24,1>Transpose
slider4:0<0,127,1>Velocity input range min
slider5:127<0,127,1>Velocity input range max
slider6:0<0,127,1>Velocity output range min
slider7:127<0,127,1>Velocity output range max

in_pin:none
out_pin:none

@init

@slider

gAllowFilteredEvents = slider1 ? 0 : 1;
gForceChannel0 = slider2;
gTransposeSemis = slider3;

gVelocityInputMin = slider4;
gVelocityInputMax = slider5;
gVelocityOutputMin = slider6;
gVelocityOutputMax = slider7;

@block

/*
https://www.midi.org/specifications-old/item/table-2-expanded-messages-list-status-bytes
https://www.midi.org/specifications-old/item/table-3-control-change-messages-data-bytes-2
status hi:

                                                   map channel           gets filtered?
8 = note off (low = channel)                           yes                  no
9 = note on(low = channel)                             yes                  no
10 = aftertouch(low = channel)                         yes                  no
11 = CC(low = channel)                                 yes                 yes
  msg2 = cc#
    0= bank select msb
    32=bank select lsb
    ...
  msg3 = value
12 = program change(low = channel)                     yes                 yes
13 = channel pressure/aftertouch (low = channel)       yes                 yes
14 = pitch wheel (low = channel)                       yes                 yes
15 = system messages where low nybble =                no                  yes
  0 = sysex
  1 = midi time code quarter frame
  2 = song position pointer
  3 = song select
  6 = tune
  8 = midi clock
  10 = midi start
  11 = midi continue
  12 = midi stop
  14 = active sense
  15 = reset

*/

while (
  midirecv(ts,status,msg23) ? (
    statusHi = (status/16)|0; // type of msg
    statusLo = status-(statusHi*16)|0; // channel usually
    msg3 = (msg23/256)|0;
    msg2 = msg23-(msg3*256)|0;
    allow = 1;
  
      (statusHi >= 15) ? ( // system messages
        allow = gAllowFilteredEvents;
      ) : (statusHi >= 10 && statusHi <= 14) ? ( // cc, PC, aftertouch, pitch
        allow = gAllowFilteredEvents;
        gForceChannel0 ? (statusLo = 0);
      ) : ( // status 8, 9 = note off, note on
        gForceChannel0 ? (statusLo = 0);
        // msg2 = note value, clamped.
        msg2 = msg2 + gTransposeSemis;
        (msg2 <= 1 || msg2 >= 126) ? allow = 0; // filter OOB
  
        // map velocity
        (msg3 > 0) ? (
          msg3 = ((msg3 - gVelocityInputMin) / (gVelocityInputMax - gVelocityInputMin)) * (gVelocityOutputMax - gVelocityOutputMin) + gVelocityOutputMin;
          // clamp
          msg3 = min(127, msg3);
          msg3 = max(0, msg3);
        );
      );
  
    allow ? (
      status = (statusHi*16+statusLo)|0;// re-construct status from nybbles
      msg23 = (msg3*256+msg2)|0; // re-construct msg23 value
      midisend(ts,status,msg23);
    );
    1; // for the while loop to function
  );
);

